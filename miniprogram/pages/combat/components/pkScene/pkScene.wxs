/* eslint-disable no-var */

// NOTE: 坑一：wxs 中 key 不能是数字, {0: {}} // error 或 运行时取不到值
// NOTE: 坑二：wxs 中不能遍历对象，records: {0: {index: 1, score: 99}, 1: {}}：https://developers.weixin.qq.com/community/develop/doc/000680569f81100755279069856000
// NOTE: 坑三： 用 hidden 在手机上数据变了但不会更新渲染 (从不显示变成显示)，即 showLeftSelect 和 showRightSelect 函数返回显示，但是实际上不会显示

module.exports = {
  showLeftSelect: function (combat, selectIndex, optionIndex) {
    var isOwner = combat.isOwner

    // NOTE: 情况一 ---> 房主 && 当前选择的选项 是 所渲染的选项 && 本地已经选择了本题
    if (isOwner && selectIndex === optionIndex && !combat.canSelect) {
      return true
    }

    // 房主用户数据
    var combatOwner = combat.users[0]
    // 当前是第几题
    var wordsIndex = combat.wordsIndex
    // 本题的选择数据 { index: number, score: number }
    var combatOwnerSelectRecord = combatOwner.records['t' + wordsIndex]
    var remoteSelectIndex = combatOwnerSelectRecord ? combatOwnerSelectRecord.index : -1

    // NOTE: 情况二 ---> 不是房主 && 远程当前选择的选项 是 所渲染的选项 && 本地已经选择了本题
    if (!isOwner && remoteSelectIndex === optionIndex && !combat.canSelect) {
      return true
    }

    return false
  },

  isLeftSelectWrong: function (combat, selectIndex) {
    var isOwner = combat.isOwner
    // 当前是第几题
    var wordsIndex = combat.wordsIndex
    // {correctIndex: number, options: T[], word: string, ... }
    var wordObject = combat.wordList[wordsIndex]
    // 本题的正确答案
    var correctIndex = wordObject.correctIndex

    // 房主用户数据
    var combatOwner = combat.users[0]
    // 本题的选择数据 { index: number, score: number }
    var combatOwnerSelectRecord = combatOwner.records['t' + wordsIndex]
    var remoteSelectIndex = combatOwnerSelectRecord ? combatOwnerSelectRecord.index : -1

    // NOTE: 情况一 ---> 房主 && 本地选择 !== 本题的正确选项
    if (isOwner && selectIndex !== correctIndex) {
      return true
    }

    // NOTE: 情况二 ---> 不是房主 && 远程选择 !== 本题的正确选项
    if (!isOwner && remoteSelectIndex !== correctIndex) {
      return true
    }

    return false
  },

  isLeftSelectCorrect: function (combat, selectIndex) {
    var isOwner = combat.isOwner
    // 当前是第几题
    var wordsIndex = combat.wordsIndex
    // {correctIndex: number, options: T[], word: string, ... }
    var wordObject = combat.wordList[wordsIndex]
    // 本题的正确答案
    var correctIndex = wordObject.correctIndex

    // 房主用户数据
    var combatOwner = combat.users[0]
    // 本题的选择数据 { index: number, score: number }
    var combatOwnerSelectRecord = combatOwner.records['t' + wordsIndex]
    var remoteSelectIndex = combatOwnerSelectRecord ? combatOwnerSelectRecord.index : -1

    // NOTE: 情况一 ---> 房主 && 本地选择 === 本题的正确选项
    if (isOwner && selectIndex === correctIndex) {
      return true
    }

    // NOTE: 情况二 ---> 不是房主 && 远程选择 === 本题的正确选项
    if (!isOwner && remoteSelectIndex === correctIndex) {
      return true
    }

    return false
  },

  showRightSelect: function (combat, selectIndex, optionIndex) {
    var isOwner = combat.isOwner

    // NOTE: 情况一 ---> 不是房主 && 当前选择的选项 是 所渲染的选项 && 本地已经选择了本题
    if (!isOwner && selectIndex === optionIndex && !combat.canSelect) {
      return true
    }

    // 非房主用户数据
    var combatUser = combat.users[1]
    // 当前是第几题
    var wordsIndex = combat.wordsIndex
    // 本题的选择数据 { index: number, score: number }
    var combatUserSelectRecord = combatUser.records['t' + wordsIndex]
    var remoteSelectIndex = combatUserSelectRecord ? combatUserSelectRecord.index : -1

    // NOTE: 情况二 ---> 是房主 && 远程当前选择的选项 是 所渲染的选项 && 本地已经选择了本题
    if (isOwner && remoteSelectIndex === optionIndex && !combat.canSelect) {
      return true
    }

    return false
  },

  isRightSelectWrong: function (combat, selectIndex) {
    var isOwner = combat.isOwner
    // 当前是第几题
    var wordsIndex = combat.wordsIndex
    // {correctIndex: number, options: T[], word: string, ... }
    var wordObject = combat.wordList[wordsIndex]
    // 本题的正确答案
    var correctIndex = wordObject.correctIndex

    // 非房主用户数据
    var combatUser = combat.users[1]
    // 本题的选择数据 { index: number, score: number }
    var combatUserSelectRecord = combatUser.records['t' + wordsIndex]
    var remoteSelectIndex = combatUserSelectRecord ? combatUserSelectRecord.index : -1

    // NOTE: 情况一 ---> 不是房主 && 本地选择 !== 本题的正确选项
    if (!isOwner && selectIndex !== correctIndex) {
      return true
    }

    // NOTE: 情况二 ---> 是房主 && 远程选择 !== 本题的正确选项
    if (isOwner && remoteSelectIndex !== correctIndex) {
      return true
    }

    return false
  },

  isRightSelectCorrect: function (combat, selectIndex) {
    var isOwner = combat.isOwner
    // 当前是第几题
    var wordsIndex = combat.wordsIndex
    // {correctIndex: number, options: T[], word: string, ... }
    var wordObject = combat.wordList[wordsIndex]
    // 本题的正确答案
    var correctIndex = wordObject.correctIndex

    // 非房主用户数据
    var combatUser = combat.users[1]
    // 本题的选择数据 { index: number, score: number }
    var combatUserSelectRecord = combatUser.records['t' + wordsIndex]
    var remoteSelectIndex = combatUserSelectRecord ? combatUserSelectRecord.index : -1

    // NOTE: 情况一 ---> 不是房主 && 本地选择 === 本题的正确选项
    if (!isOwner && selectIndex === correctIndex) {
      return true
    }

    // NOTE: 情况二 ---> 是房主 && 远程选择 === 本题的正确选项
    if (isOwner && remoteSelectIndex === correctIndex) {
      return true
    }

    return false
  },

  getUserRecordScore: function (combat, isLeft) {
    if (!combat || !combat.users) {
      return false
    }

    var index = isLeft ? 0 : 1
    // 用户数据
    var user = combat.users[index]
    // 当前是第几题
    var wordsIndex = combat.wordsIndex
    // 本题的选择数据 { index: number, score: number }
    var selectRecord = user.records['t' + wordsIndex]
    var selectScore = selectRecord ? selectRecord.score : false

    return selectScore
  },

  // NOTE: 坑 - 使用 utils.calcProgressPercent($state.combat, true) 在 wxml 中调用计算返回的值变了，但是手机端的进度条 UI 不会更新，所以直接在 wxml 中写表达式计算
  calcProgressPercent: function (combat, isLeft) {
    if (!combat || !combat.users) {
      return 0
    }

    var index = isLeft ? 0 : 1

    // 用户数据
    var user = combat.users[index]

    // 当前用户总分
    var gradeTotal = user.gradeTotal

    var wordsLength = combat.wordList.length

    return Math.floor(gradeTotal / wordsLength) // 每道题目最高 100 分
  },

  showAnswer: function (combat, index) {
    if (combat && typeof combat.canSelect !== 'undefined' && !combat.canSelect && (index === combat.wordList[combat.wordsIndex].correctIndex)) {
      return true
    }

    return false
  }
}
